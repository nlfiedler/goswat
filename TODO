GoSwat Checklist (-*- text -*-)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Come up with a name for the project
  - nswat
  - GoSwat
  - Swat
  - Smite
  - uxiio (anglicized Yiddish for swat)
  - agyon√ºt (Hungarian for brain/swat/slay)
+ evaluate the exp/ogle package
  - seems to have all of the basics in place
  - should understand the design and create a new design to address TODO comments
  - see how it uses debug/elf and debug/dwarf
+ evaluate the debug packages (dwarf, elf, etc) for re-use
  - dwarf pkg implements 2.0 standard
  - elf pkg appears up-to-date
  - proc pkg provides basic debugging support
    - breakpoints
    - processes
    - threads
    - registers
+ evaluate Picol as an alternative to gotcl (http://antirez.com/page/picol.html)
  - looks good; easy to understand; clean C code
  - needs to be translated to idiomatic Go code
  - less code to start with, so more work/fun to develop
+ evaluate gotcl (http://code.google.com/p/gotcl/)
  - so called "tcl-like" language, probably not a good base for starting
  - not a full fledged Tcl interpreter
  - has most of the basics
- Write a basic Tcl interpreter based on the picol example
- Set up tags support in Emacs using tago (https://github.com/AlexCombas/Tago)
- Utilize termbox (https://github.com/nsf/termbox) or gocurse (https://github.com/jabb/gocurse)
  to facilitate a psuedo GUI in the console
- Features
  - Breakpoint tags vs. groups
  - Built-in functions not overridable
  - Cool swat features (^u^o)
  - Source view area
  - Variables view area
  - Registers view area
  - Compile Tcl to bytecode
